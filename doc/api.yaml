openapi: 3.0.3
info:
  title: UniDrive - OpenAPI 3.0
  description: |-
    Share part of the whole journey to the University with other students thanks to UniDrive!
    
  contact:
    email: vecchi.1938069@studenti.uniroma1.it
  license:
    name: Sapienza University
    url: https://www.uniroma1.it/it/
  version: 1.0.11
externalDocs:
  description: Find out more about the project
  url: https://www.notion.so/REPORT-2dd4406f190846dba586faa224fff91e
  
servers:
  - url: '{protocol}://UniDrive.com'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
  
tags:
  - name: User
    description: Users actions
  - name: Profile
    description: Represents the profile page of the user
    
components:
  parameters:
    user_id:
      description: User whose profile belongs to. 
      name: user_id
      in: path
      required: true
      schema: { $ref: "#/components/schemas/UserID" }
          
  schemas:
    ShortProfile:
        description: Represents the information displayed in the list of likes, followers, ecc...
        type: object
        properties:
          username: {$ref: "#/components/schemas/Username"}
          profile_picture_url:
            description: URL of the profile picture. Accepting only ID attached with .png/.jpg/.jpeg extensions.
            type: string
            pattern: '^[a-zA-Z0-9-_]*\.(png|jpg|jpeg)$'
            example: "Cksvy-ZXtXRE.jpeg"
            minLength: 0
            maxLength: 150
  
paths:
  /rides/:
    get:
      tags:
        - User
      summary: Find drivers
      description: |
        The profile of an user contains the username, the number of photos it has, the number of follows/followers, a bio and a profile picture.
      operationId: getUserProfile
      parameters:
        - name: username
          in: query
          description: Username to filter by
          required: false
          explode: false
          schema:
              $ref: '#/components/schemas/Username'
      responses:
        '200':
          description: Successful operation. User profile given in the response body.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Profile'
        "400": { description: Invalid username supplied }
        "404": { description: User not found }
        "500": { $ref: "#/components/responses/InternalServerError" }